# analyzers/malware/signature_matcher.py

# A simple set of example signatures
MALWARE_SIGNATURES = {
    'user_agents': [
        'masscan',
        'sqlmap',
        'nmap',
        'nessus',
    ],
    'ja3_hashes': [
        'e7d705a3286e19ea42f587f344ee6865', # Example Metasploit JA3 hash
    ]
}

def detect_malware_signatures(packets):
    """
    Detects malware signatures in network traffic.
    """
    results = {
        'detected_signatures': [],
    }

    for packet in packets:
        # Check User-Agent in HTTP requests
        if packet.haslayer('HTTPRequest'):
            user_agent = packet['HTTPRequest'].User_Agent.decode('utf-8', 'ignore')
            for signature in MALWARE_SIGNATURES['user_agents']:
                if signature.lower() in user_agent.lower():
                    results['detected_signatures'].append({
                        'type': 'user_agent',
                        'signature': signature,
                        'packet_summary': str(packet.summary()),
                    })

        # Check JA3 hashes in TLS Client Hellos
        if packet.haslayer('TLSClientHello'):
            if hasattr(packet['TLSClientHello'], 'ja3'):
                ja3_hash = packet['TLSClientHello'].ja3
                if ja3_hash in MALWARE_SIGNATURES['ja3_hashes']:
                    results['detected_signatures'].append({
                        'type': 'ja3_hash',
                        'signature': ja3_hash,
                        'packet_summary': str(packet.summary()),
                    })

    return results
